// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Twitter.Infrastructure;

#nullable disable

namespace Twitter.Infrastructure.Migrations
{
    [DbContext(typeof(AppIdentityDbContext))]
    [Migration("20230906000757_AddIsMainTweetToTweetTable")]
    partial class AddIsMainTweetToTweetTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TagTweet", b =>
                {
                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.Property<Guid>("TweetsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TagsId", "TweetsId");

                    b.HasIndex("TweetsId");

                    b.ToTable("TagTweet");
                });

            modelBuilder.Entity("Twitter.Infrastructure.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Twitter.Infrastructure.Entities.Tweet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Audience")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsMainTweet")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MainTweetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MainTweetId");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("TagTweet", b =>
                {
                    b.HasOne("Twitter.Infrastructure.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Twitter.Infrastructure.Entities.Tweet", null)
                        .WithMany()
                        .HasForeignKey("TweetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Twitter.Infrastructure.Entities.Tweet", b =>
                {
                    b.HasOne("Twitter.Infrastructure.Entities.Tweet", "MainTweet")
                        .WithMany("SubTweets")
                        .HasForeignKey("MainTweetId");

                    b.Navigation("MainTweet");
                });

            modelBuilder.Entity("Twitter.Infrastructure.Entities.Tweet", b =>
                {
                    b.Navigation("SubTweets");
                });
#pragma warning restore 612, 618
        }
    }
}
